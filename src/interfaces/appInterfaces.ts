export interface LoginData {
  email: string;
  password: string;
}

export interface RegisterData {
  email: string;
  password: string;
  firstname: string;
  lastname: string;
}

export interface ResetPassword {
  email: string;
  recoveryCode: string;
  newPassword: string;
}

export interface LoginResponse {
  accessToken: string;
  refreshToken: string;
  userId: number;
  firstname: string;
  lastname: string;
  email: string;
  address: string;
  phone: string;
  cedula: string;
  role: string;
  avatar: string;
  daysLeft: number;
}

export interface RenewResponse {
  accessToken: string;
}

export interface GeographicArea {
  id: number;
  name: string;
  averageLand: string;
  averageHouse: string;
  averageWarehouse: string;
  averageShop: string;
  demandScore: number;
}

export interface Filters {
  page?: number;
  filter?: string;
  status?: string | null;
  attributes?: any;
  orderBy?: { name: string };
  ownerId?: any;
  onlyFavorite?: boolean;
  pageSize?: number;
  oportunityType: string;
  type: PropertyTypes | string;
}

// Generated by https://quicktype.io

export interface PropertyGetData {
  id: number;
  title: string;
  description: string;
  type: PropertyTypes;
  status: string;
  timesViewed: number;
  timesFound: number;
  ownerCommision: string;
  exclusivity: boolean;
  oportunityType: TOportunityType;
  datePosted: string;
  favorite: number;
  pdfUrl: string;
  attributes: any[];
  media: any[];
  user: any[];
  notification: number;
}

export type TOportunityType = 'S' | 'R';

export interface Media {
  id: number;
  filename: string;
  order: number;
}

export interface PropertyPostData {
  ownerId: string;
  typeId: string;
  title: string;
  description: string;
  ownerCommision: number;
  oportunityType: string;
  exclusivity: boolean;
  attributes: PropertyPostDataAttribute[] | [];
}

export interface PropertyPostDataAttribute {
  attributeId: number;
  attributeValue: boolean | number;
}

export interface Attribute {
  id: number;
  name: string;
  dataType: DataTypes;
  propertyType: PropertyTypes[];
  status: string;
  content: null | string[];
  value?: string | number;
  category: AttributeCategory;
  order: number;
  isRequired: number;
}

export type PropertyTypes = 'A' | 'B' | 'C';

export type DataTypes = 'S' | 'D' | 'C' | 'N';

export type AttributeCategory =
  | 'TRANSACCION'
  | 'UBICACION'
  | 'MEDIDAS'
  | 'AMENITIES'
  | 'ADICIONALES'
  | 'CARACTERISTICAS';

export interface IHistoryItem {
  id: number;
  name: string;
  status: 'I' | 'A';
  query: {
    page: number;
    filter: string;
    status: null | string;
    orderBy: string;
    attributes: any;
    age: string;
    price: { min: string; max: string };
    oportunityType: string;
    type: PropertyTypes;
  };
  datePosted: string;
  ownerId: number;
  notification: number;
}

// Generated by https://quicktype.io

export interface IInterestedItem {
  id: number;
  message: null;
  notes: null | string;
  date: string;
  read: number;
  favorite: number;
  title: string;
  propId: number;
  propertyDate: string;
  totalinteresadossinmarcar: number;
  propertyStatus: string;
  userId: number;
  firstname: string;
  lastname: string;
  email: string;
  phone: null;
  cellphone: null | string;
  avatar: string;
}
